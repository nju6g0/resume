$color_light_gold: rgb(245, 224, 190);
$color_dark_gold: gold;

@mixin square($w, $h: $w, $r: 0) {
  width: $w;
  height: $h;
  @if $r != 0 {
    border-radius: $r;
  }
}

@mixin position_ab($x: 0, $y: 0) {
  position: absolute;
  top: $y;
  left: $x;
}

.wrapper {
  @include square(100%, 100vh);
  background: linear-gradient(
    180deg,
    rgb(1, 1, 51),
    rgb(48, 50, 143),
    rgb(205, 205, 228),
    white 70%
  );
  background-size: 100% 400%;
  overflow: hidden;
  position: relative;
  transition: 2s;
  cursor: pointer;

  .moon,
  .sun {
    transition: 1s;
  }
  .moon {
    @include square(60px, 60px, 50%);
    @include position_ab(30vw, -60px);
    animation: moonShow 2s 4s both;
  }
  .moon.show {
    @include position_ab(30vw, 20vh);
  }
  @keyframes moonShow {
    0% {
      box-shadow: inset 0 0 $color_light_gold;
    }
    100% {
      box-shadow: inset 10px -10px $color_light_gold;
    }
  }

  .sun {
    @include square(60px, 60px, 50%);
    @include position_ab(20vw, 70vh);
    background-color: $color_dark_gold;
    box-shadow: 0 0 10px $color_dark_gold;
    opacity: 0;
  }
  .sun.show {
    @include position_ab(20vw, 20vh);
    opacity: 1;
  }

  .starsContainer {
    position: relative;
    @include square(100%);
    opacity: 0;
    [class^="star"] {
      @include square(3px, 3px, 50%);
      background-color: #fff;
      animation: falling 1s infinite;
    }
    @for $i from 1 through 30 {
      > div:nth-child(#{$i}) {
        $positionX: random() * 100%;
        $positionY: random() * -50%;
        @include position_ab($positionX, $positionY);
        animation-delay: $i * -0.1s;
      }
    }
    @keyframes falling {
      0%,
      100% {
        opacity: 0;
      }
      70% {
        opacity: 1;
      }
      0% {
        transform: translate(100px, 0);
      }
      100% {
        transform: translate(0, 70vh);
      }
    }
  }
  .starsContainer.show {
    opacity: 1;
    transition-delay: 0.5s;
  }
}
.wrapper.sun {
  background-position: 0 100%;
}
